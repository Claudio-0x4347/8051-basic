ORG 00H
SJMP SETUP

ORG 23H
LJMP SERIAL

; =========== SUBROTINA PARA CONFIGURAR OS PERIFERICOS =============
ORG 30H
SETUP: 		CLR P2.7		; INICIA COM A LAMPADA DESLIGADA
		MOV TMOD, #21H		; COLOCA O TIMER 1 EM MODO 2 E TIMER 0 EM MODO 1
		MOV TH1, #0E8H		; VALOR DE RECARGA PARA 1200 BITS/S
		MOV IE, #90H		; HABILITA A INTERRUPÇÃO SERIAL
		MOV SCON, #50H		; SERIAL MODO 1 (SM0=0 SM1=1) E  REN=1
		SETB TR1		; DISPARA A CONTAGEM DO TIMER 1
		CLR RI

MAIN:		SJMP $			; ESPERA AS INTERRUPÇÕES



; =========== SUBROTINA PARA TRATAR A SERIAL =======================
SERIAL:		MOV A, SBUF		; MOVE PARA O ACUMULADOR O VALOR RECEBIDO
		CJNE A, #42H, RET1	; 0X42 = 'B'
		MOV DPTR, #LIGADO
		LCALL SERIAL_WR
		SETB P2.7		; LIGA A LAMPADA
		LCALL DELAY
		MOV DPTR, #DESLIGADO
		LCALL SERIAL_WR
		CLR P2.7		; DESLIGA A LAMPADA
RET1:		CLR RI			; RESETA O BIT DE RECEPÇÃO
		RETI

; =========== SUBROTINA DE ATRASO ==================================
DELAY:		MOV R0, #3
RECARGA_1:	MOV R1, #144
		SETB TR0		; DISPARA CONTAGEM
RECARGA_2:	MOV TH0, #05H		; RECARRREGA O TIMER 0
		MOV TL0, #0FFH
		JNB TF0, $		; DT= 69.4444444442 MS
		CLR TF0
		DJNZ R1, RECARGA_2	; 144 CONTAGENS DE DT = 10 S
		DJNZ R0, RECARGA_1	; 3 CONTAGENS DE 10 S = 30 S
		CLR TR0
		RET

; =========== SUBROTINA PARA ENVIO DE MENSAGENS ====================
SERIAL_WR:	MOV R2, #0
NEXT:		MOV A, R2
		MOVC A, @A+DPTR
		CJNE A, #0FFH, SEND	; DETECTA O CARACTER DE FINAL DE TEXTO
		RET

SEND:		MOV SBUF, A		; INICIA A TRANSMISSÃO DO CARACTER
		JNB TI, $		; AGUARDA TRANSMISSÃO
		CLR TI			; LIMPA FLAG DE TRANSMISSÃO PARA O PROXIMO DADO
		INC R2
		SJMP NEXT		; VAI PARA O PROXIMO MARACTER DA MENSAGEM

; =========== MENSAGEM DE ENVIO AO PC ===============================
LIGADO: 	DB 'LAMPADA LIGADA', 0DH, 0FFH
DESLIGADO:	DB 'LAMPADA DESLIGADA', 0DH, 0FFH
END